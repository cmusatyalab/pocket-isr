%include fedora-live-base.ks

# live_ram - Tell Dracut to copy the live image into tmpfs before using it
# scratch_volume - Have our initscript set up scratch volume and swapfile
# nopersistenthome - Don't mount /home (scratch_volume is doing it)
# noswap - Don't enable swap partitions (we're using the scratch volume)
bootloader --timeout=0 --append="live_ram scratch_volume nopersistenthome noswap"

# pocket_isr_update needs nscd; see Red Hat #442172
services --enabled=nscd
firewall --disabled
selinux --disabled
# fedora-live-base.ks uses the Fedora repos corresponding to whatever
# Fedora release we're running on.  Do the same for the OpenISR repository
# to ensure that we're pulling packages from the right place.
repo --name=openisr --baseurl=http://isr.cmu.edu/software/fedora/fc!!FVER!!/$basearch/
repo --name=pocket-isr --baseurl=!!REPO!!

%packages --instLangs C:en
@lxde-desktop
lxlauncher
obconf
slim
midori
gmixer
xdg-user-dirs-gtk
alsa-plugins-pulseaudio
NetworkManager-gnome
xcompmgr
yum-utils
nscd
# Needed to disable SELinux
lokkit

# make sure kpackagekit doesn't end up the LXDE live images
gnome-packagekit*
-kpackagekit

# make sure polkit-qt doesn't end up the LXDE live images
# this is not yet in rawide
#polkit-gnome
#-polkit-qt

# make sure xfce4-notifyd is not pulled in
-xfce4-notifyd
notification-daemon

# Prevent dmsquash-live Dracut module from kicking the initial boot
# device off the USB bus when live_ram is enabled
-eject

# Remove things we don't need
-@dial-up
-@printing
-gpicview
-gnome-packagekit-extra
-anaconda
-abrt-desktop
-printer-filters
-ypbind
-yp-tools
-nfs-utils
-rpcbind
-selinux-policy-targeted
-setroubleshoot
-smolt-firstboot

# Remove unneeded boot options
-memtest86+

# Save space
# Dictionaries
-aspell-*
-hunspell-*
-words
# i18n
-ibus*
-m17n-*
-cjkuni-uming-fonts
-un-core-dotum-fonts
-vlgothic-fonts
-jomolhari-fonts
-kacst*fonts*
-khmeros*fonts*
-lohit-*-fonts
-paktype*fonts*
-thai*fonts*
# Other
-bitmap-fonts
-nss_db
-sendmail
ssmtp
-man-pages-*

# drop some system-config things
-system-config-boot
-system-config-firewall
-system-config-language
-system-config-lvm
-system-config-network
-system-config-printer
-system-config-rootpassword
-policycoreutils-gui

# Genericize
-fedora-release
generic-release
-fedora-release-notes
generic-release-notes
-fedora-logos
generic-logos
# Prevent the Hot Dog Linux logo from being shown at boot
-plymouth-system-theme

# Add custom packages
openisr-release
openisr-client
pocket-isr-release
pocket-isr-artwork
pocket-isr-tools
virtualbox-ose-3.0
%end

%post --nochroot --interpreter /usr/bin/perl
# Add -persist entries to syslinux menu, remove "Verify and Boot" entries,
# and disable menu hiding
use strict;
use warnings;

my $persist_remove = "live_ram|scratch_volume|nopersistenthome|noswap";
my $persist_suffix = "using persistent parcel storage";

sub write_stanza {
	my $fd = shift;
	my $label = shift;
	my $is_efi = shift;
	my @opts = @_;

	if ($is_efi) {
		print $fd "title $label\n";
	} else {
		print $fd "label $label\n";
	}
	for my $line (@opts) {
		if ($line =~ /menu label/) {
			print $fd "$line $persist_suffix\n";
		} elsif ($line =~ /menu default/) {
			next;
		} else {
			$line =~ s/ ($persist_remove)(?= )//g;
			print $fd "$line\n";
		}
	}
}

sub handle_file {
	my $file = shift;
	my $is_efi = shift;

	open(FD, $file)
		or die "Couldn't read $file";
	my @data = <FD>;
	close(FD);
	chomp @data;

	open(FD, ">", $file)
		or die "Couldn't write $file";
	my $need_label = "";
	my $drop_stanza = 0;
	my @labelopts;
	for my $line (@data, "label END") {
		if ($line =~ /^(label|title)\s+(.*)$/) {
			my $label = $2;
			write_stanza(\*FD, $need_label, $is_efi, @labelopts)
				unless $need_label eq "" or $drop_stanza;
			if ($label ne "local") {
				$need_label = "$label-persist";
			} else {
				$need_label = "";
			}
			# Drop "Verify and Boot" entries
			$drop_stanza = ($label =~ /^(Verify and|check)/);
			undef @labelopts;
		} else {
			push @labelopts, $line;
		}

		print FD "$line\n"
			if $line !~ /menu hidden|hiddenmenu|label END/
						and not $drop_stanza;
	}
	close(FD);
}

handle_file "$ENV{LIVE_ROOT}/isolinux/isolinux.cfg", 0;
handle_file "$ENV{LIVE_ROOT}/EFI/boot/grub.conf", 1;
%end

%post
# create /etc/sysconfig/desktop (needed for installation)
cat >> /etc/sysconfig/desktop <<EOF
PREFERRED=/usr/bin/startlxde
DISPLAYMANAGER=/usr/bin/slim-dynwm
EOF

# Strip unneeded locales
localedef --list-archive | grep -v en | xargs localedef --delete-from-archive
mv /usr/lib/locale/locale-archive /usr/lib/locale/locale-archive.tmpl
/usr/sbin/build-locale-archive

# Remove docfiles for non-ISR packages
rpm -qad '!(open|pocket-)isr*' | xargs rm -f

# Set default desktop background for newly-created accounts
mkdir -p /etc/skel/.config/pcmanfm
cat > /etc/skel/.config/pcmanfm/main.lxde <<EOF
[Desktop]
wallpaper=/usr/share/backgrounds/isr/standard.png
show_wallpaper=1
EOF

# Record Pocket ISR version for pocket_isr_update
echo "!!VERSION!!" > /etc/pocket-isr-release


#
# Now add things to the livesys initscript
#
cat >> /etc/rc.d/init.d/livesys << 'EOF'
# disable screensaver locking and make sure gamin gets started
rm -f /etc/xdg/lxsession/LXDE/autostart
# Programs prefixed by @ are restarted if they crash
cat >> /etc/xdg/lxsession/LXDE/autostart << FOE
/usr/libexec/gam_server
@lxde-settings-daemon
@pulseaudio -D
@lxpanel --profile LXDE
@pcmanfm -d
check_isr_storage
FOE

# set up display manager
cat >> /etc/slim.conf << FOE
auto_login		yes
default_user		liveuser
xserver_arguments	-nolisten tcp
FOE

# Disable PackageKit checking, since fedora-live-base.ks doesn't do this
# correctly
gconftool-2 --direct --config-source=xml:readwrite:/etc/gconf/gconf.xml.defaults -s -t string /apps/gnome-packagekit/update-icon/frequency_get_updates never >/dev/null
gconftool-2 --direct --config-source=xml:readwrite:/etc/gconf/gconf.xml.defaults -s -t string /apps/gnome-packagekit/update-icon/frequency_get_upgrades never >/dev/null
gconftool-2 --direct --config-source=xml:readwrite:/etc/gconf/gconf.xml.defaults -s -t string /apps/gnome-packagekit/update-icon/frequency_refresh_cache never >/dev/null
gconftool-2 --direct --config-source=xml:readwrite:/etc/gconf/gconf.xml.defaults -s -t bool /apps/gnome-packagekit/update-icon/notify_available false >/dev/null
gconftool-2 --direct --config-source=xml:readwrite:/etc/gconf/gconf.xml.defaults -s -t bool /apps/gnome-packagekit/update-icon/notify_critical false >/dev/null
gconftool-2 --direct --config-source=xml:readwrite:/etc/gconf/gconf.xml.defaults -s -t bool /apps/gnome-packagekit/update-icon/notify_distro_upgrades false >/dev/null

# Set the default browser to Midori
gconftool-2 --direct --config-source=xml:readwrite:/etc/gconf/gconf.xml.defaults -s -t string /desktop/gnome/url-handlers/http/command "midori %s" >/dev/null
gconftool-2 --direct --config-source=xml:readwrite:/etc/gconf/gconf.xml.defaults -s -t string /desktop/gnome/url-handlers/https/command "midori %s" >/dev/null

# Set hostname so that parcel lockholder logs don't call us "localhost"
sed -ie 's/^HOSTNAME=.*/HOSTNAME=pocket-isr/' /etc/sysconfig/network

# Add liveuser to necessary system groups
usermod -a -G isrusers,vboxusers liveuser

# Copy OpenISR user configuration from the boot disk, if present
if [ -f /mnt/live/.openisrrc ] ; then
	cp /mnt/live/.openisrrc /home/liveuser/.openisrrc
fi

# If we booted in normal mode, fix up /mnt/live.  We can't do this in
# persistent mode because we can't unmount /mnt/live and remounting a VFAT
# filesystem with different uid/gid parameters has no effect.
if strstr "`cat /proc/cmdline`" live_ram ; then
	# If we booted from a VFAT USB device, unmount the volume and
	# remount it writable by liveuser.  If we booted from CD, unmount it
	# so the user can eject the disc, since we know there won't be a
	# hoard cache there.  If we booted from an ext234 USB device, just
	# unmount and remount /mnt/live.
	remount_live_volume
fi

# Disable annoying VirtualBox information dialogs.  These are useful, once,
# to educate the user, but in normal mode the "Don't show this message again"
# checkbox doesn't persist across reboots.
su - liveuser -c "VBoxManage setextradata global GUI/SuppressMessages confirmGoingFullscreen,confirmInputCapture,remindAboutAutoCapture,remindAboutMouseIntegrationOn,remindAboutMouseIntegrationOff,remindAboutWrongColorDepth"

# this goes at the end after all other changes.
chown -R liveuser:liveuser /home/liveuser

EOF

%end
